# Generated by Django 3.0.5 on 2020-04-13 11:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Backhand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('post_code', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Court',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('allows_doubles', models.BooleanField(default=True)),
                ('is_roof', models.BooleanField(default=False)),
                ('act', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Covering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_winner', models.BooleanField(default=True)),
                ('winner', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Hand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_official', models.BooleanField(default=True)),
                ('s1', models.IntegerField(default=0)),
                ('s2', models.IntegerField(default=0)),
                ('g1', models.IntegerField(default=0)),
                ('g2', models.IntegerField(default=0)),
                ('is_winner', models.BooleanField(default=True)),
                ('winner', models.IntegerField(default=0)),
                ('court', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Court')),
            ],
        ),
        migrations.CreateModel(
            name='Match_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('n_player', models.IntegerField(default=2)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('d_birth', models.DateField()),
                ('city', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.City')),
            ],
        ),
        migrations.CreateModel(
            name='Place_Court',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_profy', models.BooleanField(default=True)),
                ('d_start', models.DateField()),
                ('racket', models.CharField(max_length=50)),
                ('strings', models.CharField(max_length=50)),
                ('shoes', models.CharField(max_length=50)),
                ('balls', models.CharField(max_length=50)),
                ('atp_players', models.CharField(max_length=50)),
                ('backhand', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Backhand')),
                ('hand', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Hand')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='TennisUz.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Shot_Hand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Shot_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Torney_Group_Name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Torney_Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('n_playr', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tourney',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('rules', models.TextField()),
                ('court', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Court')),
            ],
        ),
        migrations.CreateModel(
            name='Winner_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tourney_Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('tourney', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Tourney')),
            ],
        ),
        migrations.CreateModel(
            name='Torney_Group_Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Player')),
                ('tourney_group', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Tourney_Group')),
            ],
        ),
        migrations.CreateModel(
            name='Stadium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=1000)),
                ('t_open', models.TimeField()),
                ('t_close', models.TimeField()),
                ('act', models.BooleanField(default=True)),
                ('city', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.City')),
            ],
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('g1', models.IntegerField(default=0)),
                ('g2', models.IntegerField(default=0)),
                ('is_tiebreak', models.BooleanField(default=True)),
                ('tb1', models.IntegerField(default=0)),
                ('tb2', models.IntegerField(default=0)),
                ('is_winner', models.BooleanField(default=True)),
                ('winner', models.IntegerField(default=0)),
                ('match', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Match')),
            ],
        ),
        migrations.CreateModel(
            name='Player_Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField()),
                ('delta_rahk', models.IntegerField(default=0)),
                ('delta_rahk_doubles', models.IntegerField(default=0)),
                ('match', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Match')),
                ('player', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Player')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='game_type',
            field=models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Match_type'),
        ),
        migrations.AddField(
            model_name='match',
            name='player1',
            field=models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, related_name='p1', to='TennisUz.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='player2',
            field=models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, related_name='p2', to='TennisUz.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='player3',
            field=models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, related_name='p3', to='TennisUz.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='player4',
            field=models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, related_name='p4', to='TennisUz.Player'),
        ),
        migrations.CreateModel(
            name='Game_Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField()),
                ('winner', models.IntegerField(default=0)),
                ('player', models.IntegerField(default=0)),
                ('game', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Game')),
                ('place_court', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Place_Court')),
                ('shot_hand', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Shot_Hand')),
                ('shot_type', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Shot_Type')),
                ('winner_type', models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Winner_type')),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='set',
            field=models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Set'),
        ),
        migrations.AddField(
            model_name='court',
            name='covering',
            field=models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Covering'),
        ),
        migrations.AddField(
            model_name='court',
            name='stadium',
            field=models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Stadium'),
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(blank='TRUE', null='True', on_delete=django.db.models.deletion.SET_NULL, to='TennisUz.Region'),
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('votes', models.IntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='TennisUz.Question')),
            ],
        ),
    ]
